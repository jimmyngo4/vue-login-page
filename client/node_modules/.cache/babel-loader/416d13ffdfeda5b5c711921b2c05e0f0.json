{"remainingRequest":"C:\\Users\\15803\\Documents\\hw6\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\15803\\Documents\\hw6\\client\\src\\bridge.js","dependencies":[{"path":"C:\\Users\\15803\\Documents\\hw6\\client\\src\\bridge.js","mtime":1650931463735},{"path":"C:\\Users\\15803\\Documents\\hw6\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650903164488},{"path":"C:\\Users\\15803\\Documents\\hw6\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1650903165336}],"contextDependencies":[],"result":["//imports\nimport axios from 'axios';\nlet url = 'api/posts/'; //class\n\nclass bridge {\n  //CRUD examples (for reference only)\n  //create/update\n  static setDocument(params) {\n    try {\n      let command = 'setDocument';\n      return axios.post(url + command, params);\n    } catch (err) {\n      reject(err);\n    }\n  } //read\n\n\n  static getDocument(params) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        let command = 'getDocument';\n        let res = await axios.post(url + command, params);\n        resolve(res.data);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  } //delete\n\n\n  static deleteDocument(params) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        let command = 'deleteDocument';\n        let res = await axios.post(url + command, params);\n        resolve(res.data);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  } //customs\n  //delete\n\n\n  static deleteUser(params) {\n    try {\n      let command = 'deleteUser';\n      return axios.post(url + command, params);\n    } catch (err) {\n      reject(err);\n    }\n  } //set\n\n\n  static setUser(params) {\n    try {\n      let command = 'setUser';\n      return axios.post(url + command, params);\n    } catch (err) {\n      reject(err);\n    }\n  } //get token\n\n\n  static getToken(user) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        let command = 'getToken';\n        let res = await axios.post(url + command, user);\n        resolve(res.data);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n} //export\n\n\nexport default bridge;",{"version":3,"sources":["C:\\Users\\15803\\Documents\\hw6\\client\\src\\bridge.js"],"names":["axios","url","bridge","setDocument","params","command","post","err","reject","getDocument","Promise","resolve","res","data","deleteDocument","deleteUser","setUser","getToken","user"],"mappings":"AAAA;AACI,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAIC,GAAG,GAAG,YAAV,C,CAEJ;;AACI,MAAMC,MAAN,CAAa;AACb;AACI;AACI,SAAOC,WAAP,CAAmBC,MAAnB,EAA0B;AACtB,QAAI;AACA,UAAIC,OAAO,GAAG,aAAd;AACA,aAAOL,KAAK,CAACM,IAAN,CAAWL,GAAG,GAAGI,OAAjB,EAA0BD,MAA1B,CAAP;AACH,KAHD,CAGE,OAAMG,GAAN,EAAU;AACRC,MAAAA,MAAM,CAACD,GAAD,CAAN;AACH;AACJ,GAVI,CAWT;;;AACI,SAAOE,WAAP,CAAmBL,MAAnB,EAA0B;AACtB,WAAO,IAAIM,OAAJ,CAAY,OAAOC,OAAP,EAAgBH,MAAhB,KAA2B;AAC1C,UAAI;AACA,YAAIH,OAAO,GAAG,aAAd;AACA,YAAIO,GAAG,GAAG,MAAMZ,KAAK,CAACM,IAAN,CAAWL,GAAG,GAAGI,OAAjB,EAA0BD,MAA1B,CAAhB;AACAO,QAAAA,OAAO,CAACC,GAAG,CAACC,IAAL,CAAP;AACH,OAJD,CAIE,OAAMN,GAAN,EAAU;AACRC,QAAAA,MAAM,CAACD,GAAD,CAAN;AACH;AACJ,KARM,CAAP;AASH,GAtBI,CAuBT;;;AACI,SAAOO,cAAP,CAAsBV,MAAtB,EAA6B;AACzB,WAAO,IAAIM,OAAJ,CAAY,OAAOC,OAAP,EAAgBH,MAAhB,KAA2B;AAC1C,UAAI;AACA,YAAIH,OAAO,GAAG,gBAAd;AACA,YAAIO,GAAG,GAAG,MAAMZ,KAAK,CAACM,IAAN,CAAWL,GAAG,GAAGI,OAAjB,EAA0BD,MAA1B,CAAhB;AACAO,QAAAA,OAAO,CAACC,GAAG,CAACC,IAAL,CAAP;AACH,OAJD,CAIE,OAAMN,GAAN,EAAU;AACRC,QAAAA,MAAM,CAACD,GAAD,CAAN;AACH;AACJ,KARM,CAAP;AASH,GAlCI,CAoCb;AACI;;;AACI,SAAOQ,UAAP,CAAkBX,MAAlB,EAAyB;AACrB,QAAI;AACA,UAAIC,OAAO,GAAG,YAAd;AACA,aAAOL,KAAK,CAACM,IAAN,CAAWL,GAAG,GAAGI,OAAjB,EAA0BD,MAA1B,CAAP;AACH,KAHD,CAGE,OAAMG,GAAN,EAAU;AACRC,MAAAA,MAAM,CAACD,GAAD,CAAN;AACH;AACJ,GA7CI,CA+CT;;;AACI,SAAOS,OAAP,CAAeZ,MAAf,EAAsB;AAClB,QAAI;AACA,UAAIC,OAAO,GAAG,SAAd;AACA,aAAOL,KAAK,CAACM,IAAN,CAAWL,GAAG,GAAGI,OAAjB,EAA0BD,MAA1B,CAAP;AACH,KAHD,CAGE,OAAMG,GAAN,EAAU;AACRC,MAAAA,MAAM,CAACD,GAAD,CAAN;AACH;AACJ,GAvDI,CAyDT;;;AACI,SAAOU,QAAP,CAAgBC,IAAhB,EAAqB;AACjB,WAAO,IAAIR,OAAJ,CAAY,OAAOC,OAAP,EAAgBH,MAAhB,KAA2B;AAC1C,UAAI;AACA,YAAIH,OAAO,GAAG,UAAd;AACA,YAAIO,GAAG,GAAG,MAAMZ,KAAK,CAACM,IAAN,CAAWL,GAAG,GAAGI,OAAjB,EAA0Ba,IAA1B,CAAhB;AACAP,QAAAA,OAAO,CAACC,GAAG,CAACC,IAAL,CAAP;AACH,OAJD,CAIE,OAAMN,GAAN,EAAU;AACRC,QAAAA,MAAM,CAACD,GAAD,CAAN;AACH;AACJ,KARM,CAAP;AASH;;AApEI,C,CAuEb;;;AACI,eAAeL,MAAf","sourcesContent":["//imports\r\n    import axios from 'axios';\r\n    let url = 'api/posts/';\r\n\r\n//class\r\n    class bridge {\r\n    //CRUD examples (for reference only)\r\n        //create/update\r\n            static setDocument(params){\r\n                try {\r\n                    let command = 'setDocument';\r\n                    return axios.post(url + command, params);\r\n                } catch(err){\r\n                    reject(err);\r\n                }\r\n            }\r\n        //read\r\n            static getDocument(params){\r\n                return new Promise(async (resolve, reject) => {\r\n                    try {\r\n                        let command = 'getDocument';\r\n                        let res = await axios.post(url + command, params);\r\n                        resolve(res.data);\r\n                    } catch(err){\r\n                        reject(err);\r\n                    }\r\n                });\r\n            }\r\n        //delete\r\n            static deleteDocument(params){\r\n                return new Promise(async (resolve, reject) => {\r\n                    try {\r\n                        let command = 'deleteDocument';\r\n                        let res = await axios.post(url + command, params);\r\n                        resolve(res.data);\r\n                    } catch(err){\r\n                        reject(err);\r\n                    }\r\n                });\r\n            }\r\n\r\n    //customs\r\n        //delete\r\n            static deleteUser(params){\r\n                try {\r\n                    let command = 'deleteUser';\r\n                    return axios.post(url + command, params);\r\n                } catch(err){\r\n                    reject(err);\r\n                }\r\n            }\r\n\r\n        //set\r\n            static setUser(params){\r\n                try {\r\n                    let command = 'setUser';\r\n                    return axios.post(url + command, params);\r\n                } catch(err){\r\n                    reject(err);\r\n                }\r\n            }\r\n\r\n        //get token\r\n            static getToken(user){\r\n                return new Promise(async (resolve, reject) => {\r\n                    try {\r\n                        let command = 'getToken';\r\n                        let res = await axios.post(url + command, user);\r\n                        resolve(res.data);\r\n                    } catch(err){\r\n                        reject(err);\r\n                    }\r\n                });\r\n            }\r\n    }\r\n\r\n    //export\r\n        export default bridge;"]}]}